--- a/code/display/QtViewer/QtDisplayData.cc
+++ b/code/display/QtViewer/QtDisplayData.cc
@@ -50,7 +50,6 @@
 #include <images/Images/ImageUtilities.h>
 #include <images/Images/ImageOpener.h>
 #include <images/Images/ImageInfo.h>
-#include <imageanalysis/IO/CasaImageOpener.h>
 #include <display/Display/WorldCanvas.h>
 #include <display/Display/WorldCanvasHolder.h>
 #include <display/DisplayEvents/WCMotionEvent.h>
@@ -316,14 +315,13 @@ namespace casa { //# NAMESPACE CASA - BEGIN
 					}
 
 					// use the file path name for the opener
-					switch(CasaImageOpener::imageType(tmp_path)) {
+					switch(ImageOpener::imageType(tmp_path)) {
 
 					case ImageOpener::AIPSPP: {
 
 						if( imagePixelType(path_) == TpFloat ) {
 							im_.reset(new PagedImage<Float>(path_, TableLock::AutoNoReadLocking));
-							// regions in image...
-							// Vector<String> regions = im_->regionNames( );
+							// regions in Vector<String> regions = im_->regionNames( );
 							// for ( int i = 0; i < regions.size( ); ++i ) {
 							// 	cout << "\t\t\t\t\t(" << i << "): " << regions[i] << endl;
 							// }
@@ -346,7 +344,7 @@ namespace casa { //# NAMESPACE CASA - BEGIN
 						break;
 					}
 					case ImageOpener::IMAGECONCAT:{
-					  LatticeBase* latt =CasaImageOpener::openImage(path);
+					  LatticeBase* latt =ImageOpener::openImage(path);
 					  if(!latt)
 					    throw(AipsError("Error in opening concatenated Image"));
 					  DataType dtype=latt->dataType();
@@ -359,7 +357,7 @@ namespace casa { //# NAMESPACE CASA - BEGIN
 					  break;
 					}
 					case ImageOpener::IMAGEEXPR:{
-					  LatticeBase* latt =CasaImageOpener::openImage(path);
+					  LatticeBase* latt =ImageOpener::openImage(path);
 					  if(!latt)
 					    throw(AipsError("Error in opening concatenated Image"));
 					  DataType dtype=latt->dataType();
diff --git a/code/display/QtViewer/QtViewerBase.cc b/code/display/QtViewer/QtViewerBase.cc
index efb3f4f..d993bb3 100644
--- a/code/display/QtViewer/QtViewerBase.cc
+++ b/code/display/QtViewer/QtViewerBase.cc
@@ -32,7 +32,6 @@
 #include <display/QtViewer/QtApp.h>
 #include <tables/Tables/TableInfo.h>
 #include <images/Images/ImageOpener.h>
-#include <imageanalysis/IO/CasaImageOpener.h>
 #include <display/QtAutoGui/QtXmlRecord.h>
 #include <casa/iomanip.h>
 
@@ -252,7 +251,7 @@ namespace casa { //# NAMESPACE CASA - BEGIN
 			//Note:  Calling the CasaImageOpener can produce an AipsError if the file
 			//does not have proper permissions.  Please see CAS-8068.
 			try {
-				if(CasaImageOpener::imageType(pathname)==ImageOpener::IMAGECONCAT || ImageOpener::imageType(pathname)==ImageOpener::IMAGEEXPR){
+				if(ImageOpener::imageType(pathname)==ImageOpener::IMAGECONCAT || ImageOpener::imageType(pathname)==ImageOpener::IMAGEEXPR){
 					return "Image";
 				}
 			}
@@ -287,7 +286,7 @@ namespace casa { //# NAMESPACE CASA - BEGIN
 			//Note:  Calling the CasaImageOpener can throw an AIPS error if the
 			//directory/file does not have proper permissions.  Please see CAS-8068.
 			try {
-				if(CasaImageOpener::imageType(pathname)==ImageOpener::IMAGECONCAT){
+				if(ImageOpener::imageType(pathname)==ImageOpener::IMAGECONCAT){
 					return "Image";
 				}
 			}
diff --git a/code/imageanalysis/CMakeLists.txt b/code/imageanalysis/CMakeLists.txt
index 9b7d048..5444b94 100644
--- a/code/imageanalysis/CMakeLists.txt
+++ b/code/imageanalysis/CMakeLists.txt
@@ -69,7 +69,6 @@ ImageAnalysis/SpectralCollapser.cc
 ImageAnalysis/SpectralFitter.cc
 
 IO/AsciiAnnotationFileLine.cc
-IO/CasaImageOpener.cc
 IO/FitterEstimatesFileParser.cc
 IO/ImageFitterResults.cc
 IO/ImageProfileFitterResults.cc
@@ -108,7 +107,6 @@ install (FILES
 	)
 install (FILES
 	IO/AsciiAnnotationFileLine.h
-	IO/CasaImageOpener.h
 	IO/FitterEstimatesFileParser.h
 	IO/LogFile.h
     IO/ImageFitterResults.h
@@ -277,7 +275,6 @@ casa_add_assay( imageanalysis ImageAnalysis/test/tSpectralFitter.cc )
 casa_add_assay( imageanalysis ImageAnalysis/test/tSubImageFactory.cc )
 
 casa_add_assay( imageanalysis IO/test/tFitterEstimatesFileParser.cc )
-casa_add_assay( imageanalysis IO/test/tCasaImageOpener.cc )
 casa_add_assay( imageanalysis IO/test/tProfileFitterEstimatesFileParser.cc )
 casa_add_assay( imageanalysis IO/test/tRegionTextParser.cc )
 
diff --git a/code/imageanalysis/ImageAnalysis/ImageFactory2.cc b/code/imageanalysis/ImageAnalysis/ImageFactory2.cc
index 2770e2a..770d1f9 100755
--- a/code/imageanalysis/ImageAnalysis/ImageFactory2.cc
+++ b/code/imageanalysis/ImageAnalysis/ImageFactory2.cc
@@ -30,7 +30,7 @@
 #include <casa/OS/EnvVar.h>
 #include <images/Images/ImageFITSConverter.h>
 #include <images/Images/ImageUtilities.h>
-#include <imageanalysis/IO/CasaImageOpener.h>
+#include <images/Images/ImageOpener.h>
 
 #include <imageanalysis/ImageAnalysis/PixelValueManipulator.h>
 #include <imageanalysis/ImageAnalysis/SubImageFactory.h>
@@ -115,7 +115,7 @@ pair<SPIIF, SPIIC> ImageFactory::fromImage(
     Bool overwrite
 ) {
     _checkInfile(infile);
-    unique_ptr<LatticeBase> latt(CasaImageOpener::openImage(infile));
+    unique_ptr<LatticeBase> latt(ImageOpener::openImage(infile));
     ThrowIf (! latt, "Unable to open lattice");
     auto imagePair = _fromLatticeBase(latt);
     LogIO mylog;
@@ -293,7 +293,7 @@ SHARED_PTR<TempImage<Float> > ImageFactory::floatFromComplex(
 
 pair<SPIIF, SPIIC> ImageFactory::fromFile(const String& infile) {
     _checkInfile(infile);
-    unique_ptr<LatticeBase> latt(CasaImageOpener::openImage(infile));
+    unique_ptr<LatticeBase> latt(ImageOpener::openImage(infile));
     ThrowIf (! latt, "Unable to open lattice");
     return _fromLatticeBase(latt);
 }
--- a/code/imageanalysis/ImageAnalysis/ImageInputProcessor2.tcc
+++ b/code/imageanalysis/ImageAnalysis/ImageInputProcessor2.tcc
@@ -34,7 +34,6 @@
 #include <images/Images/MIRIADImage.h>
 #include <images/Regions/WCBox.h>
 #include <imageanalysis/ImageAnalysis/ImageMetaData.h>
-#include <imageanalysis/IO/CasaImageOpener.h>
 
 #include <measures/Measures/Stokes.h>
 
--- a/code/synthesis/apps/utils/imageconcat.cc.orig
+++ b/code/synthesis/apps/utils/imageconcat.cc
@@ -37,7 +37,7 @@
 #include <lattices/Lattices/LatticeConcat.h>
 #include <images/Images/PagedImage.h>
 #include <images/Images/ImageConcat.h>
-#include <imageanalysis/IO/CasaImageOpener.h>
+#include <images/Images/ImageOpener.h>
 #include <casa/Inputs/Input.h>
 #include <casa/namespace.h>
 using namespace std;
@@ -174,7 +174,7 @@
       }
     }
 
-    cerr << "TYPE " << CasaImageOpener::imageType(outname) << endl;
+    cerr << "TYPE " << ImageOpener::imageType(outname) << endl;
     //tim.show("Time taken to concatenate via image: ");
     /* for(Int k=0; k < nimages; ++k){
       //vim[k]->tempClose();
